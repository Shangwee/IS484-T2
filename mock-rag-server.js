const http = require('http');

// Create a simple HTTP server
const server = http.createServer((req, res) => {
  // Enable CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  
  // Handle preflight OPTIONS request
  if (req.method === 'OPTIONS') {
    res.writeHead(204);
    res.end();
    return;
  }
  
  // Only handle POST requests to /rag/query
  if (req.method === 'POST' && req.url === '/rag/query') {
    let body = '';
    
    // Collect request data
    req.on('data', chunk => {
      body += chunk.toString();
    });
    
    // Process the request
    req.on('end', () => {
      try {
        const data = JSON.parse(body);
        const query = data.query || 'No query provided';
        
        // Mock response
        const response = {
          answer: `This is a mock answer to your query: "${query}". In a real implementation, this would be generated by an AI model based on retrieved documents.`,
          summary: `Response to: ${query}`,
          sources: [
            {
              id: 1,
              title: "Tesla Reports Strong Q4 Earnings",
              source: "Financial Times",
              date: "2024-03-15"
            },
            {
              id: 2,
              title: "Apple Launches New AI Features",
              source: "TechCrunch",
              date: "2024-03-10"
            }
          ],
          entities: {
            org: ["Tesla", "Apple"],
            person: ["Elon Musk"]
          },
          entity_sentiment: {
            "Tesla": {
              score: 42.5,
              classification: "bullish",
              snapshot_type: "context",
              disclaimer: "This is a snapshot from retrieved context only."
            },
            "Apple": {
              score: 23.7,
              classification: "bullish",
              snapshot_type: "context",
              disclaimer: "This is a snapshot from retrieved context only."
            }
          },
          context_sentiment: {
            score: 30.2,
            classification: "bullish",
            confidence: 0.85,
            agreement_rate: 0.9
          }
        };
        
        // Send JSON response
        res.writeHead(200, { 'Content-Type': 'application/json' });
        res.end(JSON.stringify(response));
      } catch (err) {
        // Handle error
        res.writeHead(400, { 'Content-Type': 'application/json' });
        res.end(JSON.stringify({ error: 'Invalid request', message: err.message }));
      }
    });
  } else {
    // Handle other routes
    res.writeHead(404, { 'Content-Type': 'application/json' });
    res.end(JSON.stringify({ error: 'Not found' }));
  }
});

// Start server on port 5001
const PORT = 5001;
server.listen(PORT, () => {
  console.log(`Mock RAG server running on http://localhost:${PORT}`);
  console.log(`Endpoint: http://localhost:${PORT}/rag/query`);
});